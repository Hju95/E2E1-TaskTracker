name: Java CI with Gradle

env:
  S3_BUCKET_NAME: task-tracker-1114

on:
  push:
    branches: [ "develop" ]

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
    - name: init with Gradle
      uses: gradle/gradle-build-action@v2
    - run: gradle init        
    - name: Build with Gradle
      uses: gradle/gradle-build-action@67421db6bd0bf253fb4bd25b31ebb98943c375e1
      with:
        arguments: bootJar
    
      
    # Access Key와 Secret Access Key를 통해 권한을 확인한다.
    # 아래 코드에 Access Key와 Secret Key를 직접 작성하지 않는다.
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }} # 등록한 Github Secret이 자동으로 불려온다.
        aws-secret-access-key: ${{ secrets.AWS_ACCESS_SECRET }} # 등록한 Github Secret이 자동으로 불려온다.
        aws-region: ap-northeast-2
    # 압축한 프로젝트를 S3로 전송한다.
    - name: Upload to S3
      run: aws s3 cp --region ap-northeast-2 ./proejct/build/libs/proejct-0.0.1-SNAPSHOT.jar s3://$S3_BUCKET_NAME/proejct-0.0.1-SNAPSHOT.jar
        # CodeDeploy에게 배포 명령을 내린다.
    - name: Code Deploy
      run: 
        aws deploy create-deployment --application-name task-tracker-code-deploy
        --deployment-config-name CodeDeployDefault.AllAtOnce
        --deployment-group-name task-tracker-code-group
        --s3-location bucket=$S3_BUCKET_NAME,bundleType=jar,key=proejct-0.0.1-SNAPSHOT.jar
